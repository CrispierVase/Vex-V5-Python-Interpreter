{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\n# 0 = empty, 1 = end, 2 = wall, 3 = start\nMAZES = {\n    1: [\n        [1, 0, 2, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 3]\n        ],\n    2: [\n        [1, 0, 0, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 3]\n    ],\n    3: [\n        [3, 0, 2, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 1]\n    ],\n    4: [\n        [1, 0, 0, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 0, 0, 2],\n        [0, 2, 0, 0, 0],\n        [0, 0, 0, 0, 1]\n    ],\n    5: [\n        [1, 0, 2, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 2, 0, 2],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 2, 3]\n    ],\n    6: [\n        [3, 0, 0, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 1]\n    ],\n    7: [\n        [3, 0, 0, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 2, 2],\n        [0, 2, 0, 0, 1]\n    ],\n    8: [\n        [3, 0, 2, 0, 0],\n        [2, 0, 0, 0, 0],\n        [0, 0, 2, 2, 2],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 2, 1]\n    ],\n    9: [\n        [3, 0, 0, 0, 0],\n        [2, 2, 2, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 2, 2],\n        [0, 2, 0, 0, 1]\n    ]\n}\n\nrow = 4\ncol = 4\n\n\nmaze = MAZES[1]\n# direction - 0 = down, 1 = left, 2 = up, 3 = right\ndirection = 2\nprevious_direction = 1\ncurrent_row = 4\ncurrent_col = 4\ndrivetrain.turn_for(LEFT, 71.5, DEGREES)\ndirection -= 1\n\nwhile maze[current_row][current_col] != 1:\n    # facing left\n    while direction == 1 and maze[current_row][current_col] != 1 and current_col > 0:\n        drivetrain.drive_for(FORWARD, 12.25, INCHES)\n        current_col -= 1\n    if current_row == 0 and maze[current_row][current_col] != 1:\n        drivetrain.turn_for(LEFT, 71.5, DEGREES)\n        drivetrain.drive_for(FORWARD, 12.25, INCHES)\n        current_row += 1\n        drivetrain.turn_for(RIGHT, 71.5, DEGREES)\n        direction += 1\n        direction %= 4\n    else:\n        drivetrain.turn_for(RIGHT, 71.5, DEGREES)\n        previous_direction = direction\n        direction += 1\n        direction %= 4\n    # facing up\n    while direction == 2 and maze[current_row][current_col] != 1:\n        while maze[current_row - 1][current_col] != 2 and current_row > 0:\n            drivetrain.drive_for(FORWARD, 12.25, INCHES)\n            current_row -= 1\n        if previous_direction == 1:\n            drivetrain.turn_for(RIGHT, 71.5, DEGREES)\n            direction += 1\n            brain.screen.print(direction)\n            wait(3, SECONDS)\n            direction %= 4\n            brain.screen.print(direction)\n            wait(3, SECONDS)\n        else:\n            drivetrain.turn_for(LEFT, 71.5, DEGREES)\n            direction -= 1\n            direction %= 4\n    while direction == 3 and maze[current_row][current_col] != 1:\n        while maze[current_row][current_col + 1] != 2 and current_col > 0:\n            drivetrain.drive_for(FORWARD, 12.25, INCHES)\n            current_col += 1\n        drivetrain.turn_for(LEFT, 71.5, DEGREES)\n        previous_direction = direction\n        direction -= 1\n        direction %= 4\n    brain.screen.print(str(current_row) + ' ' + str(current_col) + ' ')\n\nbrain.screen.print('DONE')\n","textLanguage":"python","rconfig":[{"port":[1,2,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}